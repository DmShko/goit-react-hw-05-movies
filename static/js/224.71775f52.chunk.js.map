{"version":3,"file":"static/js/224.71775f52.chunk.js","mappings":"qPACA,EAAuB,0BAAvB,EAAuD,yB,SC2BvD,EA1BoB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SAGnB,OACI,iCACI,gBAAKC,UAAWC,EAASC,IAAG,0CAAqCH,EAASI,aAAeC,IAAI,kBAC7F,4BACI,wBAAKL,EAASM,SACd,kBACA,sCACA,uBAAIN,EAASO,YACb,oCACA,eAAIN,UAAWC,EAAf,cAEyBM,IAApBR,EAASS,OAAuBT,EAASS,OAAOC,KAAI,SAAAC,GAC7C,OAAO,yBAAmB,uBAAIA,EAAMC,QAApBD,EAAME,GAC7B,IAAI,UAQxB,ECzBD,EAAuB,2BAAvB,EAAyD,2BC0CzD,EAjCsB,SAAC,GAAiB,IAAD,EAAdC,EAAc,EAAdA,QAEtB,GAA4CC,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACMC,GAAWC,EAAAA,EAAAA,MAchB,OAZAC,EAAAA,EAAAA,YAAU,YAENC,EAAAA,EAAAA,GAAe,SAAD,OAAUP,GAAV,kBACbQ,MAAK,SAAAC,GAEFN,EAAkBM,EAASC,KAC9B,IACAC,OAAM,SAAAC,GACLC,IAAAA,OAAAA,QAAwBD,EAAME,QAC/B,GACJ,GAAC,CAACd,KAGC,iCACI,gBAAKb,UAAW4B,EAAhB,UAAyB,SAAC,KAAD,CAAUC,GAAE,UAAEZ,EAASa,aAAX,QAAoB,IAAhC,qBACzB,+CACC,SAAC,EAAD,CAAa/B,SAAUgB,KACxB,gBAAIf,UAAW4B,EAAf,WACQ,yBAAI,SAAC,KAAD,CAASC,GAAG,OAAOC,MAAOb,EAASa,MAAnC,qBACJ,yBAAI,SAAC,KAAD,CAASD,GAAG,UAAUC,MAAOb,EAASa,MAAtC,0BAEZ,SAAC,EAAAC,SAAD,CAAUC,UAAU,wCAApB,UACI,SAAC,KAAD,QAIf,C","sources":["webpack://react-homework-template/./src/components/MainOfMovie/MainOfMovie.module.css?e278","components/MainOfMovie/MainOfMovie.js","webpack://react-homework-template/./src/pages/MovieDetails.module.css?6cd2","pages/MovieDetails.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MainOfMovie_list__vISRF\",\"img\":\"MainOfMovie_img__vCaII\"};","import mom from './MainOfMovie.module.css'\n\nconst MainOfMovie = ({ mainData }) => {\n    \n    // console.log(mainData.genres);\n    return (\n        <>\n            <img className={mom.img} src={`https://image.tmdb.org/t/p/w500/${mainData.poster_path}`} alt=\"Movie poster\"></img>\n            <div>\n                <h1>{mainData.title}</h1>\n                <p></p>\n                <h2>Overview</h2>\n                <p>{mainData.overview}</p>\n                <h2>Genres</h2>\n                <ul className={mom.list}>\n                    \n                    {mainData.genres !== undefined ? mainData.genres.map(value => {\n                            return <li key={value.id}><p>{value.name}</p></li>\n                    }) : ''}\n                    \n                </ul>\n               \n            </div>      \n        </>\n    )\n\n};\n\nexport default MainOfMovie;","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"MovieDetails_link__wv3O1\",\"back\":\"MovieDetails_back__D7G-9\"};","import { Suspense, useEffect, useState } from \"react\";\nimport { NavLink, Outlet, useLocation } from \"react-router-dom\";\n\nimport getDataFromAPI from 'getAPI';\nimport Notiflix from 'notiflix';\n\nimport MainOfMovie from '../components/MainOfMovie/MainOfMovie'\n\nimport md from './MovieDetails.module.css'\n\nconst MovieDetailes = ({ movieID }) => {\n\n   const [mainAboutMovie, setMainAboutMovie] = useState([]);\n   const location = useLocation();\n\n    useEffect(() => {\n        \n        getDataFromAPI(`movie/${movieID}`,`language=en-US`)\n        .then(responce => {\n          \n            setMainAboutMovie(responce.data);\n        })\n        .catch(error => {\n          Notiflix.Notify.warning(error.message);\n        });\n    },[movieID]);\n\n    return(\n        <>\n            <div className={md.back}><NavLink  to={location.state ?? \"/\"}>Back</NavLink></div>\n            <p>It's MovieDetailes</p>\n            {<MainOfMovie mainData={mainAboutMovie}/>}\n            <ul className={md.link}>\n                    <li><NavLink to='cast' state={location.state}>Cast</NavLink></li>\n                    <li><NavLink to='reviews' state={location.state}>Review</NavLink></li>\n            </ul> \n            <Suspense fallback={<div>Loading...</div>}>\n                <Outlet/>\n            </Suspense>\n        </>\n    );\n}\n\nexport default MovieDetailes;"],"names":["mainData","className","mom","src","poster_path","alt","title","overview","undefined","genres","map","value","name","id","movieID","useState","mainAboutMovie","setMainAboutMovie","location","useLocation","useEffect","getDataFromAPI","then","responce","data","catch","error","Notiflix","message","md","to","state","Suspense","fallback"],"sourceRoot":""}